function set_bgp_pref(){
    if bgp_path ~ [= 19  18  16  14  12  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  17  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 19  18  16  15  14  13  12  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }

    bgp_local_pref = 1;
    return bgp_local_pref;
}