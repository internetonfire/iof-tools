function set_bgp_pref(){
    if bgp_path ~ [= 13  11  10  9 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6 =] then{
      bgp_local_pref = 107;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5 =] then{
      bgp_local_pref = 107;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4 =] then{
      bgp_local_pref = 107;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6 =] then{
      bgp_local_pref = 106;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4 =] then{
      bgp_local_pref = 115;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6 =] then{
      bgp_local_pref = 105;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  2 =] then{
      bgp_local_pref = 131;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6 =] then{
      bgp_local_pref = 104;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  3 =] then{
      bgp_local_pref = 115;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  2 =] then{
      bgp_local_pref = 115;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4 =] then{
      bgp_local_pref = 114;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4 =] then{
      bgp_local_pref = 105;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4 =] then{
      bgp_local_pref = 113;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4 =] then{
      bgp_local_pref = 111;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4 =] then{
      bgp_local_pref = 106;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5 =] then{
      bgp_local_pref = 106;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5 =] then{
      bgp_local_pref = 105;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  3 =] then{
      bgp_local_pref = 107;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  2  1 =] then{
      bgp_local_pref = 115;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  2  0 =] then{
      bgp_local_pref = 163;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5 =] then{
      bgp_local_pref = 104;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  2  0 =] then{
      bgp_local_pref = 131;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  2 =] then{
      bgp_local_pref = 127;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4 =] then{
      bgp_local_pref = 110;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4 =] then{
      bgp_local_pref = 104;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  3 =] then{
      bgp_local_pref = 113;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  2 =] then{
      bgp_local_pref = 113;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4 =] then{
      bgp_local_pref = 109;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  2 =] then{
      bgp_local_pref = 107;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  3  2 =] then{
      bgp_local_pref = 130;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4 =] then{
      bgp_local_pref = 112;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  3 =] then{
      bgp_local_pref = 114;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  3 =] then{
      bgp_local_pref = 111;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  3  2 =] then{
      bgp_local_pref = 114;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  2 =] then{
      bgp_local_pref = 123;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  3 =] then{
      bgp_local_pref = 105;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  2 =] then{
      bgp_local_pref = 111;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  2 =] then{
      bgp_local_pref = 129;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  3 =] then{
      bgp_local_pref = 106;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  2  1 =] then{
      bgp_local_pref = 131;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  3 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 115;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 111;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 123;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 122;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  3 =] then{
      bgp_local_pref = 110;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 108;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 123;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 112;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 119;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  2  0 =] then{
      bgp_local_pref = 147;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 127;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  3  2 =] then{
      bgp_local_pref = 106;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 130;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  2  1  0 =] then{
      bgp_local_pref = 162;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  2  1 =] then{
      bgp_local_pref = 127;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 126;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 125;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 130;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 121;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  2 =] then{
      bgp_local_pref = 105;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  2  0 =] then{
      bgp_local_pref = 155;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  2 =] then{
      bgp_local_pref = 109;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  3  2 =] then{
      bgp_local_pref = 110;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 129;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 129;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  2 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  3 =] then{
      bgp_local_pref = 104;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  2  1 =] then{
      bgp_local_pref = 113;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 109;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  2  1 =] then{
      bgp_local_pref = 107;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 128;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  3  2  1 =] then{
      bgp_local_pref = 114;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  2  0 =] then{
      bgp_local_pref = 159;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  3  2 =] then{
      bgp_local_pref = 112;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  3  2  0 =] then{
      bgp_local_pref = 161;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  3 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 143;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 160;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 126;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 125;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 146;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  2  0 =] then{
      bgp_local_pref = 111;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 117;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 113;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 151;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 109;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 121;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 108;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  2  1 =] then{
      bgp_local_pref = 119;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 122;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 112;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  3  2  0 =] then{
      bgp_local_pref = 145;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 128;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 157;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 107;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  2  1  0 =] then{
      bgp_local_pref = 114;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  3  2  1 =] then{
      bgp_local_pref = 106;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 118;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 124;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  3  2 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 119;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 110;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 128;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 104;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  2  0 =] then{
      bgp_local_pref = 139;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 126;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 108;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 153;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 154;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 158;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 121;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  3  2 =] then{
      bgp_local_pref = 120;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 122;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  2  1 =] then{
      bgp_local_pref = 105;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  2 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  3 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 125;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 124;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 116;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  3  2 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 141;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 104;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 124;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  3  2  1 =] then{
      bgp_local_pref = 118;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 106;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 112;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 142;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 156;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 117;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 118;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  4  3  2  1  0 =] then{
      bgp_local_pref = 144;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  2  1 =] then{
      bgp_local_pref = 117;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  2  1  0 =] then{
      bgp_local_pref = 110;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 149;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  3  2  1 =] then{
      bgp_local_pref = 120;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 105;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  2  1  0 =] then{
      bgp_local_pref = 138;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 103;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  3  2  0 =] then{
      bgp_local_pref = 109;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 108;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 152;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  3  2  0 =] then{
      bgp_local_pref = 137;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 120;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 150;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  2  0 =] then{
      bgp_local_pref = 135;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 116;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 134;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 108;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 104;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  2  1  0 =] then{
      bgp_local_pref = 102;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 140;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  3  2  1 =] then{
      bgp_local_pref = 116;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 133;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  4  3  2  1  0 =] then{
      bgp_local_pref = 136;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 148;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  3  2  0 =] then{
      bgp_local_pref = 101;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  11  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 100;
      return bgp_local_pref;
    }
    if bgp_path ~ [= 13  12  10  9  8  7  6  5  4  3  2  1  0 =] then{
      bgp_local_pref = 132;
      return bgp_local_pref;
    }

    bgp_local_pref = 1;
    return bgp_local_pref;
}