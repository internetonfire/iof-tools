        # Protocol used with a bgp peer

        function {rt_export_name} ()
        {{
          # If it's from my static protocol export it
          if proto = "static_bgp" then return true;
          if net_martian() then return false;
          # Check from who comes the net informations
          # return bgp_next_hop ~ [ 100.1.1.1, 100.1.1.2, 200.1.1.1 ];
          # Clients list
          {client_list}
        }}

        filter {filter_in_name}
        {{
            if ! rt_import_all({peer_as_filter}) then reject;
            accept;
        }}

        filter {filter_out_name}
        {{
            if ! {rt_export_name}() then reject;
            accept;
        }}

        protocol bgp {protocol_name} {{
            # local addr used by the interface and AS of the local peer
            local {local_addr} as {local_as};
            # Addr of the neighbor and it's AS
            neighbor {peer_addr} as {peer_as};
            hold time {hold_timer};
            ipv4{{
                import filter {filter_in_name};
                # export where proto = "export_protocol";
                export filter {filter_out_name};
            }};
            direct;
            connect retry time {connect_retry_timer};
            connect delay time {connect_delay_timer};
            startup hold time {startup_hold_timer};
            default bgp_local_pref {local_pref};
        }}
